
//Light Sensor
#include <HardwareSerial.h>
#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_TSL2561_U.h>

//Sim Module
HardwareSerial SerialAT(2); // Use UART2 for AT commands

const char* RECIPIENT_NUMBER = "+919480179016";//Sanjeet"+919845409263";  // Replace with the recipient's number
const char* SMS_MESSAGE = "Intrusion Alert! Light detected in Asset 1";  // Replace with your message
const char* SMSC_NUMBER = "+919845086007";  // Replace with your SMS center number

#define HALL_SENSOR_PIN 14  // Hall effect sensor connected to GPIO 14 // Connect the Hall sensor output to GPIO 14 on the ESP32
int hallState = 0;      // Variable to store the state of the Hall sensor

void setup() {
  Serial.begin(115200);  // Start serial communication for debugging
  SerialAT.begin(115200, SERIAL_8N1, 16, 17);  // Start UART communication with SIM module (RX:16, TX:17)
  
  pinMode(HALL_SENSOR_PIN, INPUT);  // Initialize Hall sensor pin as input
  delay(1000);  // Wait for SerialAT to initialize
  
}

void loop() {
  hallState = digitalRead(HALL_SENSOR_PIN);  // Read the state of the Hall sensor

  if (hallState == HIGH) {
    Serial.println("Normal Scenario");
  } else {
    Serial.println("Intrusion Detected");
    sendSMS();
    delay(3000);
  }
  
  delay(50);  // Delay to reduce serial output frequency
}

void sendSMS() {
  Serial.println("Sending SMS...");
  
  // Set phone functionality
  SerialAT.println("AT+CFUN=1");
  delay(200);
  
  // Enable verbose error messages
  SerialAT.println("AT+CMEE=2");
  delay(200);
  
  // Set SMS text mode
  SerialAT.println("AT+CMGF=1");
  delay(200);
  
  // Set SMS center number
  SerialAT.print("AT+CSCA=\"");
  SerialAT.print(SMSC_NUMBER);
  SerialAT.println("\"");
  delay(200);
  
  // Send SMS
  SerialAT.print("AT+CMGS=\"");
  SerialAT.print(RECIPIENT_NUMBER);
  SerialAT.println("\"");
  delay(200);
  
  // Send message content
  SerialAT.print(SMS_MESSAGE);
  delay(100);
  
  // Send Ctrl+Z (ASCII 26) to indicate end of message
  SerialAT.write(26);
  
  // Wait for the module to respond
  delay(5000);
  
  // Check for any response from the module
  while (SerialAT.available()) {
    Serial.write(SerialAT.read());
  }
  
  Serial.println("SMS sent!");
}
